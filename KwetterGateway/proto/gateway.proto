syntax = "proto3";
option go_package = ".";

import "google/api/annotations.proto";

service AuthService{
  rpc Register(RegisterReq) returns(RegisterRes){
    option (google.api.http) = { post: "/auth/register" body: "*" };
  }
  rpc Login(LoginReq) returns(LoginRes){
    option (google.api.http) = { post: "/auth/login"};
  }
  rpc Validate(ValidateReq) returns(ValidateRes){
    option (google.api.http) = { get: "/auth/validate"};
  }
}

service AccountService{
  rpc CreateUser(CreateUserReq) returns(CreateUserRes){
    option (google.api.http) = { post: "/account/create" body: "*"};
  }
  rpc GetUser(GetUserReq) returns(GetUserRes){
    option (google.api.http) = { get: "/account/{account_id}"};
  }
  rpc GetAllUsers(GetAllUsersReq) returns(GetAllUsersRes){
    option (google.api.http) = { get: "/account/all" };
  }
  rpc UpdateUser(UpdateUserReq) returns(UpdateUserRes){
    option (google.api.http) = { patch: "/account/{account_id}" body: "*"};
  }
  rpc DeleteUser(DeleteUserReq) returns(UpdateUserRes){
    option (google.api.http) = { delete: "/account/{account_id}"};
  }
}

service TrendService{
  rpc GetTrend(GetTrendReq) returns(GetTrendRes){
    option (google.api.http) = { get: "/trend/{trend}"};
  }
}

service TweetService{
  rpc ReturnAll(ReturnAllReq) returns(ReturnAllRes){
    option (google.api.http) = { get: "/tweet/all"};
  }
  rpc ReturnTweet(ReturnTweetReq) returns(ReturnTweetRes){
    option (google.api.http) = { get: "/tweet/{tweet_id}"};
  }
  rpc PostTweet(PostTweetReq) returns(PostTweetRes){
    option (google.api.http) = { post: "/tweet" body: "*"};
  }
}

//AuthService
//Register
message RegisterReq{}
message RegisterRes{}

//Login
message LoginReq{string email = 1; string password = 2;}
message LoginRes{string status = 1; string access_token = 2; string refresh_token = 3;}

//Validate
message ValidateReq{}
message ValidateRes{}

//AccountService
//CreateUser
message CreateUserReq{}
message CreateUserRes{}

//GetUser
message GetUserReq{}
message GetUserRes{}

//GetAllUsers
message GetAllUsersReq{}
message GetAllUsersRes{}

//UpdateUser
message UpdateUserReq{}
message UpdateUserRes{}

//DeleteUser
message DeleteUserReq{}
message DeleteUserRes{}

//TrendService
//GetTrend
message GetTrendReq{}
message GetTrendRes{}

//TweetService
//ReturnAll
message ReturnAllReq{}
message ReturnAllRes{}

//ReturnTweet
message ReturnTweetReq{}
message ReturnTweetRes{}

//PostTweet
message PostTweetReq{}
message PostTweetRes{}